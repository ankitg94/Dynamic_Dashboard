{"version":3,"file":"static/js/19.707b087a.chunk.js","mappings":"kLAOA,MAqEA,EArEoBA,KAClB,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,CAAC,IAE5CC,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,2BAI3BC,EAHSH,EAASI,KAAKC,MAGFC,QAAO,CAACC,EAAKF,KAClCA,IACFE,EAAIF,IAAUE,EAAIF,IAAU,GAAK,GAE5BE,IACN,CAAC,GAEJX,EAAaO,GACbK,EAAAA,GAAMC,QAAQ,4BAChB,CAAE,MAAOC,GACPF,EAAAA,GAAME,MAAM,uBACZC,QAAQD,MAAMA,EAChB,GAGFE,EAAW,GACV,IAEH,MAGMC,EAAY,CAChBC,OAJaC,OAAOC,KAAKrB,GAKzBsB,SAAU,CACR,CACEC,MAAO,cACPd,KAPOW,OAAOI,OAAOxB,GAQrByB,gBAAiB,CACf,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFC,YAAa,yBACbC,YAAa,KAKnB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EAEEC,EAAAA,EAAAA,KAACC,EAAAA,GAAO,KACRH,EAAAA,EAAAA,MAAA,QAAMI,UAAU,kBAAiBH,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uBACJC,EAAAA,EAAAA,KAAA,WAAAD,UACEC,EAAAA,EAAAA,KAACG,EAAAA,GAAG,CAACxB,KAAMS,WAGX,C,6BCtEVgB,EAAAA,GAAMC,YAAYC,EAAAA,G","sources":["PagesElement/TopicCharts.js","../node_modules/chart.js/auto/auto.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport 'chart.js/auto'; // Ensure all chart types are loaded\r\n\r\n\r\nconst TopicCharts = () => {\r\n  const [topicData, setTopicData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('/api/v1/data/get-topics');\r\n        const topics = response.data.topic;\r\n\r\n        // Count the occurrences of each topic\r\n        const topicCounts = topics.reduce((acc, topic) => {\r\n          if (topic) {\r\n            acc[topic] = (acc[topic] || 0) + 1;\r\n          }\r\n          return acc;\r\n        }, {});\r\n\r\n        setTopicData(topicCounts);\r\n        toast.success(\"Data fetched successfully\");\r\n      } catch (error) {\r\n        toast.error('Error fetching data');\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const labels = Object.keys(topicData);\r\n  const data = Object.values(topicData);\r\n\r\n  const chartData = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: 'Occurrences',\r\n        data,\r\n        backgroundColor: [\r\n          '#FF6384',\r\n          '#36A2EB',\r\n          '#FFCE56',\r\n          '#4BC0C0',\r\n          '#9966FF',\r\n          '#FF9F40',\r\n          '#FF6384',\r\n          '#36A2EB',\r\n          '#FFCE56',\r\n          '#4BC0C0',\r\n        ], // You can add more colors or use a dynamic color generation\r\n        borderColor: 'rgba(255, 255, 255, 1)',\r\n        borderWidth: 2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <Toaster />\r\n      <main className=\"chart-container\">\r\n        <h1>Topic Occurrences</h1>\r\n        <section>\r\n          <Pie data={chartData} />\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopicCharts;\r\n\r\n\r\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n"],"names":["TopicCharts","topicData","setTopicData","useState","useEffect","async","response","axios","get","topicCounts","data","topic","reduce","acc","toast","success","error","console","fetchData","chartData","labels","Object","keys","datasets","label","values","backgroundColor","borderColor","borderWidth","_jsxs","children","_jsx","Toaster","className","Pie","Chart","register","registerables"],"sourceRoot":""}