{"version":3,"file":"static/js/908.fdd45b76.chunk.js","mappings":"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","sources":["ReactCharts/Charts.js","PagesElement/BarCharts.js","PagesElement/CountryCharts.js","D3Element/D3Graph.js","PagesElement/Intensity.js","PagesElement/RegionChart.js","PagesElement/TopicCharts.js","PagesElement/YearChart.js","components/Sidebar.js","Pages/AdminPage.js","ReactCharts/Barcharts.js","components/Navbar.js"],"sourcesContent":["import {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    LineElement,\r\n    PointElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    Filler,\r\n  } from \"chart.js\";\r\n  import { Line } from \"react-chartjs-2\";\r\n  \r\n  ChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    LineElement,\r\n    PointElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    Filler\r\n  );\r\n  \r\n  export const LineChart = ({ data, label, backgroundColor, borderColor, labels }) => {\r\n    const options = {\r\n      responsive: true,\r\n      plugins: {\r\n        legend: {\r\n          display: false,\r\n        },\r\n        title: {\r\n          display: false,\r\n        },\r\n      },\r\n      scales: {\r\n        y: {\r\n          beginAtZero: true,\r\n          grid: {\r\n            display: false,\r\n          },\r\n        },\r\n        x: {\r\n          grid: {\r\n            display: false,\r\n          },\r\n        },\r\n      },\r\n    };\r\n  \r\n    const chartData = {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          fill: true,\r\n          label,\r\n          data,\r\n          backgroundColor,\r\n          borderColor,\r\n        },\r\n      ],\r\n    };\r\n  \r\n    return <Line options={options} data={chartData} />;\r\n  };\r\n  ","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { LineChart } from '../ReactCharts/Charts'; // Adjust the import path as needed\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nconst months = [\r\n  'January', 'February', 'March', 'April', 'May', 'June', 'July', \r\n  'Aug', 'Sept', 'Oct', 'Nov', 'Dec'\r\n];\r\n\r\nconst BarCharts = () => {\r\n  const [userData, setUserData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const userResponse = await axios.get('/api/v1/data/get-Likehood');\r\n        setUserData(userResponse.data.LikeHood);\r\n        toast.success(\"Data fetched successfully\");\r\n        console.log(userResponse.data.LikeHood);\r\n      } catch (error) {\r\n        toast.error('Error fetching data');\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Toaster/>\r\n      <main className=\"chart-container\">\r\n        \r\n        <section>\r\n          <LineChart\r\n            data={userData}\r\n            label=\"Users\"\r\n            borderColor=\"rgb(53, 162, 255)\"\r\n            backgroundColor=\"rgba(53, 162, 255,0.5)\"\r\n            labels={months}\r\n          />\r\n          \r\n        </section>\r\n      </main> \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarCharts;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { BarChart } from '../ReactCharts/Barcharts'; // Adjust the import path as needed\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\n\r\nconst CountryCharts = () => {\r\n\r\n  const [countryLabels, setCountryLabels] = useState([]);\r\n  const [countryCounts, setCountryCounts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const userResponse = await axios.get('/api/v1/data/get-country');\r\n        const countries = userResponse.data.country.filter(Boolean); // Filter out empty strings\r\n        const countryCountMap = countries.reduce((acc, country) => {\r\n          acc[country] = (acc[country] || 0) + 1;\r\n          return acc;\r\n        }, {});\r\n\r\n        const labels = Object.keys(countryCountMap);\r\n        const counts = Object.values(countryCountMap);\r\n\r\n        setCountryLabels(labels);\r\n        setCountryCounts(counts);\r\n\r\n        toast.success(\"Data fetched successfully\");\r\n      } catch (error) {\r\n        toast.error('Error fetching data');\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n      \r\n        <Toaster />\r\n        <main className=\"chart-container\">\r\n          <h1>Country Distribution</h1>\r\n          <section>\r\n            <BarChart\r\n              data_1={countryCounts}\r\n              data_2={[]} // No second dataset needed\r\n              title_1=\"Country Count\"\r\n              title_2=\"\"\r\n              bgColor_1=\"rgba(53, 162, 255, 0.5)\"\r\n              bgColor_2=\"\"\r\n              labels={countryLabels}\r\n              horizontal={true} // Adjust as necessary\r\n            />\r\n            <h2>Country Occurrences</h2>\r\n          </section>\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CountryCharts;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst D3Graph = ({ data }) => {\r\n  const svgRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const svg = d3.select(svgRef.current);\r\n    const { width, height } = svg.node().getBoundingClientRect();\r\n\r\n    // Clear the SVG\r\n    svg.selectAll('*').remove();\r\n\r\n    // Set the dimensions and margins of the graph\r\n    const margin = { top: 20, right: 30, bottom: 30, left: 40 };\r\n    const innerWidth = width - margin.left - margin.right;\r\n    const innerHeight = height - margin.top - margin.bottom;\r\n\r\n    // Append the svg object to the body of the page\r\n    const g = svg\r\n      .append('g')\r\n      .attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\n    // X scale\r\n    const x = d3.scaleLinear()\r\n      .domain([0, data.length])\r\n      .range([0, innerWidth]);\r\n\r\n    // Y scale\r\n    const y = d3.scaleLinear()\r\n      .domain([0, d3.max(data)])\r\n      .nice()\r\n      .range([innerHeight, 0]);\r\n\r\n    // Add X axis\r\n    g.append('g')\r\n      .attr('transform', `translate(0,${innerHeight})`)\r\n      .call(d3.axisBottom(x));\r\n\r\n    // Add Y axis\r\n    g.append('g')\r\n      .call(d3.axisLeft(y));\r\n\r\n    // Add the line\r\n    g.append('path')\r\n      .datum(data)\r\n      .attr('fill', 'none')\r\n      .attr('stroke', 'steelblue')\r\n      .attr('stroke-width', 1.5)\r\n      .attr('d', d3.line()\r\n        .x((d, i) => x(i))\r\n        .y(d => y(d))\r\n      );\r\n\r\n  }, [data]);\r\n\r\n  return (\r\n    <svg\r\n      ref={svgRef}\r\n      style={{\r\n        width: '100%',\r\n        height: '500px',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default D3Graph;\r\n","import React, { useEffect, useState } from 'react'\r\nimport D3Graph from \"../D3Element/D3Graph\"\r\nimport axios from \"axios\"\r\nimport toast from 'react-hot-toast'\r\n\r\n\r\n// import D3Graph from \"../D3Element/D3Graph\"\r\n\r\nconst Intensity = () => {\r\n\r\n  const [intensity,SetIntensity]=useState([])\r\n  \r\n  //get the intensity\r\n  const GetIntensityData =async()=>{\r\n    const {data} = await axios.get(\"/api/v1/data/get-intensity\")\r\n    try{\r\n    if(data?.success){\r\n         toast.success(\"Your all Data is given\") \r\n        SetIntensity(data?.abc || [])\r\n        console.log(intensity)\r\n    }\r\n}catch(error){\r\n    toast.error(\"Error in getting the Data\")\r\n\r\n}\r\n}\r\n  useEffect(()=>{\r\n   GetIntensityData() \r\n  },[])\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <h1>Intensity Occurrences</h1>\r\n      {intensity.length > 0 ? (\r\n        <D3Graph data={intensity} />\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\n export default Intensity\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport 'chart.js/auto'; // Ensure all chart types are loaded\r\n\r\nconst RegionChart = () => {\r\n  const [topicData, setTopicData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('/api/v1/data/get-region');\r\n        const topics = response.data.Region;\r\n\r\n        // Count the occurrences of each topic\r\n        const topicCounts = topics.reduce((acc, topic) => {\r\n          if (topic) {\r\n            acc[topic] = (acc[topic] || 0) + 1;\r\n          }\r\n          return acc;\r\n        }, {});\r\n\r\n        setTopicData(topicCounts);\r\n        toast.success(\"Data fetched successfully\");\r\n      } catch (error) {\r\n        toast.error('Error fetching data');\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const labels = Object.keys(topicData);\r\n  const data = Object.values(topicData);\r\n\r\n  const chartData = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: 'Occurrences',\r\n        data,\r\n        backgroundColor: [\r\n          '#FF6384',\r\n          '#36A2EB',\r\n          '#FFCE56',\r\n          '#4BC0C0',\r\n          '#9966FF',\r\n          '#FF9F40',\r\n          '#FF6384',\r\n          '#36A2EB',\r\n          '#FFCE56',\r\n          '#4BC0C0',\r\n        ], // You can add more colors or use a dynamic color generation\r\n        borderColor: 'rgba(255, 255, 255, 1)',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <Toaster />\r\n      <main className=\"chart-container\">\r\n        <h1>Region Occurrences</h1>\r\n        <section>\r\n          <Doughnut data={chartData} />\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegionChart;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport 'chart.js/auto'; // Ensure all chart types are loaded\r\n\r\n\r\nconst TopicCharts = () => {\r\n  const [topicData, setTopicData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('/api/v1/data/get-topics');\r\n        const topics = response.data.topic;\r\n\r\n        // Count the occurrences of each topic\r\n        const topicCounts = topics.reduce((acc, topic) => {\r\n          if (topic) {\r\n            acc[topic] = (acc[topic] || 0) + 1;\r\n          }\r\n          return acc;\r\n        }, {});\r\n\r\n        setTopicData(topicCounts);\r\n        toast.success(\"Data fetched successfully\");\r\n      } catch (error) {\r\n        toast.error('Error fetching data');\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const labels = Object.keys(topicData);\r\n  const data = Object.values(topicData);\r\n\r\n  const chartData = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: 'Occurrences',\r\n        data,\r\n        backgroundColor: [\r\n          '#FF6384',\r\n          '#36A2EB',\r\n          '#FFCE56',\r\n          '#4BC0C0',\r\n          '#9966FF',\r\n          '#FF9F40',\r\n          '#FF6384',\r\n          '#36A2EB',\r\n          '#FFCE56',\r\n          '#4BC0C0',\r\n        ], // You can add more colors or use a dynamic color generation\r\n        borderColor: 'rgba(255, 255, 255, 1)',\r\n        borderWidth: 2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <Toaster />\r\n      <main className=\"chart-container\">\r\n        <h1>Topic Occurrences</h1>\r\n        <section>\r\n          <Pie data={chartData} />\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopicCharts;\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport 'chart.js/auto'; // Ensure all chart types are loaded\r\n\r\n\r\nconst YearChart = () => {\r\n  const [yearData, setYearData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const userResponse = await axios.get('/api/v1/data/get-Year');\r\n        const years = userResponse.data.year;\r\n        const yearCounts = years.reduce((acc, year) => {\r\n          if (year) {\r\n            acc[year] = (acc[year] || 0) + 1;\r\n          }\r\n          return acc;\r\n        }, {});\r\n\r\n        setYearData(yearCounts);\r\n        toast.success(\"Data fetched successfully\");\r\n        console.log(yearCounts);\r\n      } catch (error) {\r\n        toast.error('Error fetching data');\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const labels = Object.keys(yearData);\r\n  const data = Object.values(yearData);\r\n\r\n  const chartData = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: 'Occurrences',\r\n        data,\r\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n        borderColor: 'rgba(53, 162, 235, 1)',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <Toaster />\r\n      <main className=\"chart-container\">\r\n        <h1>Year Occurrences</h1>\r\n        <section>\r\n          <Bar data={chartData} options={options} />\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YearChart;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { BiSolidDashboard } from \"react-icons/bi\";\r\nimport { AiFillLike } from \"react-icons/ai\";\r\nimport { FaRegCalendarTimes } from \"react-icons/fa\";\r\nimport { FaFontAwesomeFlag } from \"react-icons/fa\";\r\nimport { MdOutlineTopic } from \"react-icons/md\";\r\nimport { IoEarthOutline } from \"react-icons/io5\";\r\n\r\nimport Intensity from '../PagesElement/Intensity';\r\nimport BarCharts from '../PagesElement/BarCharts';\r\n\r\nimport YearChart from '../PagesElement/YearChart';\r\nimport CountryCharts from '../PagesElement/CountryCharts';\r\nimport TopicCharts from '../PagesElement/TopicCharts';\r\nimport RegionChart from '../PagesElement/RegionChart';\r\n\r\n\r\n\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <>\r\n      <div className='h-screen flex'>\r\n        <div className='w-1/4 bg-gray-100 h-screen' >\r\n        <div className=\"p-4 flex flex-col items-center\">\r\n          <ul className=\"space-y-2 \">\r\n           <Link  to=\"/Intensity\" className=\"flex items-center font-bold p-2 w-36 text-gray-100 rounded-lg bg-gray-50 hover:bg-gray-300 dark:bg-gray-600 dark:text-white dark:hover:bg-gray-700\">  \r\n           <BiSolidDashboard/>\r\n            <span className=\"ml-2\">Intensity </span>\r\n            \r\n          </Link>\r\n          <Link  to=\"/Likelihood\" className=\"flex items-center font-bold p-2 w-36 p-2 text-gray-900 rounded-lg bg-gray-50 hover:bg-gray-100 dark:bg-gray-600 dark:text-white dark:hover:bg-gray-700\">  \r\n          <AiFillLike />\r\n            <span className=\"ml-2\">Likelihood</span>\r\n          </Link>\r\n          <Link  to=\"/year\" className=\"flex items-center  font-bold p-2 w-36 p-2 text-gray-900 rounded-lg bg-gray-50 hover:bg-gray-100 dark:bg-gray-600 dark:text-white dark:hover:bg-gray-700\">  \r\n            <FaRegCalendarTimes/>\r\n            <span className=\"ml-6\">Year</span>\r\n          </Link>\r\n          <Link  to=\"/Country\" className=\"flex items-center  font-bold p-2 w-36 p-2 text-gray-900 rounded-lg bg-gray-50 hover:bg-gray-100 dark:bg-gray-600 dark:text-white dark:hover:bg-gray-700\">  \r\n            <FaFontAwesomeFlag/>\r\n            <span className=\"ml-6\">Country</span>\r\n          </Link>\r\n          <Link  to=\"/Topics\" className=\"flex items-center  font-bold p-2 w-36 p-2 text-gray-900 rounded-lg bg-gray-50 hover:bg-gray-100 dark:bg-gray-600 dark:text-white dark:hover:bg-gray-700\">  \r\n           <MdOutlineTopic/>\r\n            <span className=\"ml-6\">Topics</span>\r\n          </Link>\r\n          <Link  to=\"/Region\" className=\"flex items-center  font-bold p-2 w-36 p-2 text-gray-900 rounded-lg bg-gray-50 hover:bg-gray-100 dark:bg-gray-600 dark:text-white dark:hover:bg-gray-700\">  \r\n           <IoEarthOutline/>\r\n            <span className=\"ml-6\">Region</span>\r\n          </Link>\r\n         \r\n      </ul>\r\n    </div>\r\n        </div>\r\n        <div className='w-3/4  h-screen'>\r\n        \r\n        <div className=\"p-4\">\r\n          <ul className=\"space-x-2 flex flex-row m-2\">\r\n          \r\n          <Link to=\"/SectorFilter\"  className=\"flex items-center font-bold  w-36 h-12  text-gray-900 rounded-lg bg-red-500 hover:bg-gray-100 dark:bg-gray-600 dark:text-white dark:hover:bg-gray-700\">  \r\n            <span className=\"ml-2\">Sectors</span>\r\n            \r\n          </Link>\r\n          <Link  to=\"/endYearFilter\" className=\"flex  items-center font-bold  w-36  h-12  text-gray-900 rounded-lg bg-gray-50 hover:bg-gray-100 dark:bg-gray-600 dark:text-white dark:hover:bg-gray-700\">  \r\n          \r\n            <span className=\"ml-6\">EndYear</span>\r\n          </Link>\r\n          <Link  to=\"/countryfilter\" className=\"flex items-center  font-bold  w-36 h-12  text-gray-900 rounded-lg bg-gray-50 hover:bg-gray-100 dark:bg-gray-600 dark:text-white dark:hover:bg-gray-700\">  \r\n           \r\n            <span className=\"ml-6\">Country</span>\r\n          </Link>\r\n          <Link  to=\"/topicFilter\" className=\"flex items-center  font-bold  w-36 h-12  text-gray-900 rounded-lg bg-gray-50 hover:bg-gray-100 dark:bg-gray-600 dark:text-white dark:hover:bg-gray-700\">  \r\n          \r\n            <span className=\"ml-6\">Topics</span>\r\n          </Link>\r\n          <Link  to=\"/regionFilter\" className=\"flex items-center  font-bold  w-36 h-12  text-gray-900 rounded-lg bg-gray-50 hover:bg-gray-100 dark:bg-gray-600 dark:text-white dark:hover:bg-gray-700\">  \r\n          \r\n            <span className=\"ml-6\">Region </span>\r\n          </Link>\r\n          <Link  to=\"/PestFilter\" className=\"flex items-center  font-bold  w-36 h-12  text-gray-900 rounded-lg bg-gray-50 hover:bg-gray-100 dark:bg-gray-600 dark:text-white dark:hover:bg-gray-700\">  \r\n            \r\n            \r\n            <span className=\"ml-6\">PEST</span>\r\n          </Link>\r\n          <Link  to=\"/sourceFilter\" className=\"flex items-center  font-bold  w-36 h-12  text-gray-900 rounded-lg bg-gray-50 hover:bg-gray-100 dark:bg-gray-600 dark:text-white dark:hover:bg-gray-700\">  \r\n            \r\n            \r\n            <span className=\"ml-6\">Source</span>\r\n          </Link>\r\n         \r\n      </ul>\r\n    </div>\r\n    {/* end of filers */}\r\n    {/* mainsection */}\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen p-4 bg-gray-100\">\r\n    <h1 className='font-bold text-4xl'>Intensity Graph</h1>\r\n      <Intensity/>  \r\n    </div>\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen p-4 bg-gray-100\">\r\n    <h1 className='font-bold text-4xl'>LikeHood Graph</h1>      \r\n      <BarCharts/>\r\n      \r\n    \r\n    </div>\r\n  \r\n    <div className=\"flex flex-col items-center justify-center min-h-screen p-4 bg-gray-100\">\r\n    <h1 className='font-bold text-4xl'>Year Graph</h1>\r\n      <YearChart/>\r\n    \r\n    </div>\r\n    {/* Country Charts */}\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen p-4 bg-gray-100\">\r\n    <h1 className='font-bold text-4xl'>Country Graph</h1>\r\n      <CountryCharts/>\r\n    \r\n    </div>\r\n{/* topic Charts */}\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen p-4 bg-gray-100\">\r\n    <h1 className='font-bold text-4xl'>Topic Graph</h1>\r\n      <TopicCharts/>\r\n    \r\n    </div>\r\n\r\n\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen p-4 bg-gray-100\">\r\n    <h1 className='font-bold text-4xl'>RegionChart</h1>\r\n      <RegionChart/>\r\n    \r\n    </div>\r\n  \r\n  \r\n  \r\n  \r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport Navbar from '../components/Navbar'\r\nimport Sidebar from '../components/Sidebar'\r\n\r\nconst AdminPage = () => {\r\n  return (\r\n    <>\r\n      <Navbar/>\r\n      <Sidebar/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AdminPage\r\n","import React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"];\r\n\r\nconst BarChart = ({\r\n  data_1 = [],\r\n  data_2 = [],\r\n  title_1,\r\n  title_2,\r\n  bgColor_1,\r\n  bgColor_2,\r\n  horizontal = false,\r\n  labels = months,\r\n}) => {\r\n  const options = {\r\n    responsive: true,\r\n    indexAxis: horizontal ? \"y\" : \"x\",\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n      title: {\r\n        display: false,\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        grid: {\r\n          display: false,\r\n        },\r\n      },\r\n      x: {\r\n        grid: {\r\n          display: false,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: title_1,\r\n        data: data_1,\r\n        backgroundColor: bgColor_1,\r\n        barThickness: \"flex\",\r\n        barPercentage: 1,\r\n        categoryPercentage: 0.4,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <Bar options={options} data={data} />;\r\n};\r\n\r\nexport { BarChart };\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <nav className=\"flex justify-between items-center bg-gray-600 p-4\">\r\n      <Link to=\"/\" className=\"text-white text-2xl\">BlackCoffer Assigment\r\n      </Link>\r\n      <div className=\"flex gap-4\">\r\n        <Link to=\"/\" className=\"text-white text-lg\">Home</Link>\r\n        <Link to=\"/dashboard\"  className=\"text-white text-lg\">Dashboard</Link>\r\n      </div>\r\n    </nav>\r\n \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n"],"names":["ChartJS","register","CategoryScale","LinearScale","LineElement","PointElement","Title","Tooltip","Legend","Filler","LineChart","_ref","data","label","backgroundColor","borderColor","labels","chartData","datasets","fill","_jsx","Line","options","responsive","plugins","legend","display","title","scales","y","beginAtZero","grid","x","months","BarCharts","userData","setUserData","useState","useEffect","async","userResponse","axios","get","LikeHood","toast","success","console","log","error","fetchData","_jsxs","children","Toaster","className","CountryCharts","countryLabels","setCountryLabels","countryCounts","setCountryCounts","countryCountMap","country","filter","Boolean","reduce","acc","Object","keys","counts","values","_Fragment","BarChart","data_1","data_2","title_1","title_2","bgColor_1","bgColor_2","horizontal","svgRef","useRef","svg","d3","current","width","height","node","getBoundingClientRect","selectAll","remove","margin","innerWidth","innerHeight","g","append","attr","concat","domain","length","range","nice","call","datum","d","i","ref","style","Intensity","intensity","SetIntensity","abc","GetIntensityData","D3Graph","RegionChart","topicData","setTopicData","response","topicCounts","Region","topic","borderWidth","Doughnut","TopicCharts","Pie","YearChart","yearData","setYearData","yearCounts","year","Bar","Sidebar","Link","to","BiSolidDashboard","AiFillLike","FaRegCalendarTimes","FaFontAwesomeFlag","MdOutlineTopic","IoEarthOutline","AdminPage","Navbar","BarElement","indexAxis","barThickness","barPercentage","categoryPercentage"],"sourceRoot":""}