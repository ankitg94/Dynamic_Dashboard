{"version":3,"file":"static/js/815.7ed94aaa.chunk.js","mappings":"6LA8FA,MA6EA,EA7EqBA,KACnB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CAAC,IAE1CC,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAAI,4BAI3BC,EAHQH,EAASI,KAAKC,SAGHC,QAAO,CAACC,EAAKC,KAChCA,IACFD,EAAIC,IAASD,EAAIC,IAAS,GAAK,GAE1BD,IACN,CAAC,GAEJX,EAAYO,GACZM,EAAAA,GAAMC,QAAQ,4BAChB,CAAE,MAAOC,GACPF,EAAAA,GAAME,MAAM,uBACZC,QAAQD,MAAMA,EAChB,GAGFE,EAAW,GACV,IAEH,MAGMC,EAAY,CAChBC,OAJaC,OAAOC,KAAKtB,GAKzBuB,SAAU,CACR,CACEC,MAAO,cACPf,KAPOY,OAAOI,OAAOzB,GAQrB0B,gBAAiB,UACjBC,YAAa,wBACbC,YAAa,KAwBnB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BC,SAAA,EACvCC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KACPD,EAAAA,EAAAA,KAACE,EAAAA,GAAO,KACRL,EAAAA,EAAAA,MAAA,QAAMC,UAAU,8BAA6BC,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,0BAAyBC,SAAC,0BACxCC,EAAAA,EAAAA,KAAA,WAAAD,UACEC,EAAAA,EAAAA,KAACG,EAAAA,GAAG,CAAC1B,KAAMU,EAAWiB,QA1Bd,CACdC,UAAW,IACXC,QAAS,CACPC,OAAQ,CACNC,SAAS,IAGbC,OAAQ,CACNC,EAAG,CACDC,aAAa,GAEfC,EAAG,CACDC,KAAM,CACJL,SAAS,eAgBT,C,6DCrKV,MAgBA,EAhBeP,KAEXD,EAAAA,EAAAA,KAAAc,EAAAA,SAAA,CAAAf,UACEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oDAAmDC,SAAA,EAClEC,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,GAAG,IAAIlB,UAAU,sBAAqBC,SAAC,2BAE7CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,GAAG,IAAIlB,UAAU,qBAAoBC,SAAC,UAC5CC,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,GAAG,aAAclB,UAAU,qBAAoBC,SAAC,qB,6BCR9DkB,EAAAA,GAAMC,YAAYC,EAAAA,G","sources":["PagesFilter/EndYearFilter.js","components/Navbar.js","../node_modules/chart.js/auto/auto.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { Bar } from 'react-chartjs-2';\r\n// import toast, { Toaster } from 'react-hot-toast';\r\n// import 'chart.js/auto'; // Ensure all chart types are loaded\r\n// import Navbar from '../components/Navbar';\r\n\r\n// const EndYearGraph = () => {\r\n//   const [yearData, setYearData] = useState({});\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const response = await axios.get('/api/v1/data/get-endyear');\r\n//         const years = response.data.end_year;\r\n\r\n//         // Count the occurrences of each year\r\n//         const yearCounts = years.reduce((acc, year) => {\r\n//           if (year) {\r\n//             acc[year] = (acc[year] || 0) + 1;\r\n//           }\r\n//           return acc;\r\n//         }, {});\r\n\r\n//         setYearData(yearCounts);\r\n//         toast.success(\"Data fetched successfully\");\r\n//       } catch (error) {\r\n//         toast.error('Error fetching data');\r\n//         console.error(error);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const labels = Object.keys(yearData);\r\n//   const data = Object.values(yearData);\r\n\r\n//   const chartData = {\r\n//     labels,\r\n//     datasets: [\r\n//       {\r\n//         label: 'Occurrences',\r\n//         data,\r\n//         backgroundColor: '#4BC0C0', // You can change the color as needed\r\n//         borderColor: 'rgba(75, 192, 192, 1)',\r\n//         borderWidth: 1,\r\n//       },\r\n//     ],\r\n//   };\r\n\r\n//   const options = {\r\n//     indexAxis: 'x',\r\n//     plugins: {\r\n//       legend: {\r\n//         display: false,\r\n//       },\r\n//     },\r\n//     scales: {\r\n//       x: {\r\n//         beginAtZero: true,\r\n//       },\r\n//       y: {\r\n//         grid: {\r\n//           display: false,\r\n//         },\r\n//       },\r\n//     },\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//         <Navbar/>\r\n//       <Toaster />\r\n//       <main className=\"chart-container\">\r\n//         <h1>End Year Occurrences</h1>\r\n//         <section>\r\n//           <Bar data={chartData} options={options} />\r\n//         </section>\r\n//       </main>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default EndYearGraph;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport 'chart.js/auto'; // Ensure all chart types are loaded\r\nimport Navbar from '../components/Navbar';\r\n\r\nconst EndYearGraph = () => {\r\n  const [yearData, setYearData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('/api/v1/data/get-endyear');\r\n        const years = response.data.end_year;\r\n\r\n        // Count the occurrences of each year\r\n        const yearCounts = years.reduce((acc, year) => {\r\n          if (year) {\r\n            acc[year] = (acc[year] || 0) + 1;\r\n          }\r\n          return acc;\r\n        }, {});\r\n\r\n        setYearData(yearCounts);\r\n        toast.success(\"Data fetched successfully\");\r\n      } catch (error) {\r\n        toast.error('Error fetching data');\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const labels = Object.keys(yearData);\r\n  const data = Object.values(yearData);\r\n\r\n  const chartData = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: 'Occurrences',\r\n        data,\r\n        backgroundColor: '#4BC0C0', // You can change the color as needed\r\n        borderColor: 'rgba(75, 192, 192, 1)',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    indexAxis: 'x',\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        beginAtZero: true,\r\n      },\r\n      y: {\r\n        grid: {\r\n          display: false,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100\">\r\n      <Navbar />\r\n      <Toaster />\r\n      <main className=\"container mx-auto px-4 py-8\">\r\n        <h1 className=\"text-3xl font-bold mb-4\">End Year Occurrences</h1>\r\n        <section>\r\n          <Bar data={chartData} options={options} />\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EndYearGraph;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <nav className=\"flex justify-between items-center bg-gray-600 p-4\">\r\n      <Link to=\"/\" className=\"text-white text-2xl\">BlackCoffer Assigment\r\n      </Link>\r\n      <div className=\"flex gap-4\">\r\n        <Link to=\"/\" className=\"text-white text-lg\">Home</Link>\r\n        <Link to=\"/dashboard\"  className=\"text-white text-lg\">Dashboard</Link>\r\n      </div>\r\n    </nav>\r\n \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n"],"names":["EndYearGraph","yearData","setYearData","useState","useEffect","async","response","axios","get","yearCounts","data","end_year","reduce","acc","year","toast","success","error","console","fetchData","chartData","labels","Object","keys","datasets","label","values","backgroundColor","borderColor","borderWidth","_jsxs","className","children","_jsx","Navbar","Toaster","Bar","options","indexAxis","plugins","legend","display","scales","x","beginAtZero","y","grid","_Fragment","Link","to","Chart","register","registerables"],"sourceRoot":""}