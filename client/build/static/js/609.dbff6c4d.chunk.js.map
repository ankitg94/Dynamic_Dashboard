{"version":3,"file":"static/js/609.dbff6c4d.chunk.js","mappings":"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","sources":["PagesFilter/CountryFilter.js","ReactCharts/Barcharts.js","components/Navbar.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { BarChart } from '../ReactCharts/Barcharts'; // Adjust the import path as needed\r\n// import toast, { Toaster } from 'react-hot-toast';\r\n// import Navbar from \"../components/Navbar\"\r\n// const CountryFilter = () => {\r\n\r\n//   const [countryLabels, setCountryLabels] = useState([]);\r\n//   const [countryCounts, setCountryCounts] = useState([]);\r\n//   const [filter, setFilter] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const userResponse = await axios.get('/api/v1/data/get-country');\r\n//         const countries = userResponse.data.country.filter(Boolean); // Filter out empty strings\r\n//         const countryCountMap = countries.reduce((acc, country) => {\r\n//           acc[country] = (acc[country] || 0) + 1;\r\n//           return acc;\r\n//         }, {});\r\n\r\n//         const labels = Object.keys(countryCountMap);\r\n//         const counts = Object.values(countryCountMap);\r\n\r\n//         setCountryLabels(labels);\r\n//         setCountryCounts(counts);\r\n\r\n//         toast.success(\"Data fetched successfully\");\r\n//       } catch (error) {\r\n//         toast.error('Error fetching data');\r\n//         console.error(error);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     // Filter the country data based on the filter input\r\n//     const filteredLabels = countryLabels.filter(label =>\r\n//       label.toLowerCase().includes(filter.toLowerCase())\r\n//     );\r\n//     const filteredCounts = filteredLabels.map(label => countryCounts[countryLabels.indexOf(label)]);\r\n\r\n//     setCountryLabels(filteredLabels);\r\n//     setCountryCounts(filteredCounts);\r\n//   }, [filter, countryLabels, countryCounts]);\r\n\r\n//   return (\r\n//     <>\r\n//       <div>\r\n//         <Navbar/>\r\n//         <Toaster />\r\n//         <main className=\"chart-container\">\r\n//           <h1>Country Distribution</h1>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Filter countries...\"\r\n//             value={filter}\r\n//             onChange={(e) => setFilter(e.target.value)}\r\n//           />\r\n//           <section>\r\n//             <BarChart\r\n//               data_1={countryCounts}\r\n//               data_2={[]} // No second dataset needed\r\n//               title_1=\"Country Count\"\r\n//               title_2=\"\"\r\n//               bgColor_1=\"rgba(53, 162, 255, 0.5)\"\r\n//               bgColor_2=\"\"\r\n//               labels={countryLabels}\r\n//               horizontal={true} // Adjust as necessary\r\n//             />\r\n//             <h2>Country Occurrences</h2>\r\n//           </section>\r\n//         </main>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default CountryFilter;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { BarChart } from '../ReactCharts/Barcharts'; // Adjust the import path as needed\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport Navbar from \"../components/Navbar\"\r\n\r\nconst CountryFilter = () => {\r\n  const [countryLabels, setCountryLabels] = useState([]);\r\n  const [countryCounts, setCountryCounts] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const userResponse = await axios.get('/api/v1/data/get-country');\r\n        const countries = userResponse.data.country.filter(Boolean); // Filter out empty strings\r\n        const countryCountMap = countries.reduce((acc, country) => {\r\n          acc[country] = (acc[country] || 0) + 1;\r\n          return acc;\r\n        }, {});\r\n\r\n        const labels = Object.keys(countryCountMap);\r\n        const counts = Object.values(countryCountMap);\r\n\r\n        setCountryLabels(labels);\r\n        setCountryCounts(counts);\r\n\r\n        toast.success(\"Data fetched successfully\");\r\n      } catch (error) {\r\n        toast.error('Error fetching data');\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Filter the country data based on the filter input\r\n    const filteredLabels = countryLabels.filter(label =>\r\n      label.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n    const filteredCounts = filteredLabels.map(label => countryCounts[countryLabels.indexOf(label)]);\r\n\r\n    setCountryLabels(filteredLabels);\r\n    setCountryCounts(filteredCounts);\r\n  }, [filter, countryLabels, countryCounts]);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100\">\r\n      <Navbar/>\r\n      <Toaster />\r\n      <main className=\"container mx-auto px-4 py-8\">\r\n        <h1 className=\"text-3xl font-bold mb-4\">Country Distribution</h1>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Filter countries...\"\r\n          value={filter}\r\n          onChange={(e) => setFilter(e.target.value)}\r\n          className=\"border border-gray-300 rounded-md px-3 py-2 w-full mb-4\"\r\n        />\r\n        <section>\r\n          <BarChart\r\n            data_1={countryCounts}\r\n            data_2={[]} // No second dataset needed\r\n            title_1=\"Country Count\"\r\n            title_2=\"\"\r\n            bgColor_1=\"rgba(53, 162, 255, 0.5)\"\r\n            bgColor_2=\"\"\r\n            labels={countryLabels}\r\n            horizontal={true} // Adjust as necessary\r\n          />\r\n          <h2>Country Occurrences</h2>\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CountryFilter;\r\n","import React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"];\r\n\r\nconst BarChart = ({\r\n  data_1 = [],\r\n  data_2 = [],\r\n  title_1,\r\n  title_2,\r\n  bgColor_1,\r\n  bgColor_2,\r\n  horizontal = false,\r\n  labels = months,\r\n}) => {\r\n  const options = {\r\n    responsive: true,\r\n    indexAxis: horizontal ? \"y\" : \"x\",\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n      title: {\r\n        display: false,\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        grid: {\r\n          display: false,\r\n        },\r\n      },\r\n      x: {\r\n        grid: {\r\n          display: false,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: title_1,\r\n        data: data_1,\r\n        backgroundColor: bgColor_1,\r\n        barThickness: \"flex\",\r\n        barPercentage: 1,\r\n        categoryPercentage: 0.4,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <Bar options={options} data={data} />;\r\n};\r\n\r\nexport { BarChart };\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <nav className=\"flex justify-between items-center bg-gray-600 p-4\">\r\n      <Link to=\"/\" className=\"text-white text-2xl\">BlackCoffer Assigment\r\n      </Link>\r\n      <div className=\"flex gap-4\">\r\n        <Link to=\"/\" className=\"text-white text-lg\">Home</Link>\r\n        <Link to=\"/dashboard\"  className=\"text-white text-lg\">Dashboard</Link>\r\n      </div>\r\n    </nav>\r\n \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n"],"names":["CountryFilter","countryLabels","setCountryLabels","useState","countryCounts","setCountryCounts","filter","setFilter","useEffect","async","userResponse","axios","get","countryCountMap","data","country","Boolean","reduce","acc","labels","Object","keys","counts","values","toast","success","error","console","fetchData","filteredLabels","label","toLowerCase","includes","filteredCounts","map","indexOf","_jsxs","className","children","_jsx","Navbar","Toaster","type","placeholder","value","onChange","e","target","BarChart","data_1","data_2","title_1","title_2","bgColor_1","bgColor_2","horizontal","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","months","_ref","options","responsive","indexAxis","plugins","legend","display","title","scales","y","beginAtZero","grid","x","datasets","backgroundColor","barThickness","barPercentage","categoryPercentage","Bar","_Fragment","Link","to"],"sourceRoot":""}