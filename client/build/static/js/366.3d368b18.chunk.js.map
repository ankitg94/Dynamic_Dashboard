{"version":3,"file":"static/js/366.3d368b18.chunk.js","mappings":"0JAGA,MAgEA,EAhEgBA,IAAe,IAAd,KAAEC,GAAMD,EACvB,MAAME,GAASC,EAAAA,EAAAA,UAoDf,OAlDAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAMC,EAAAA,IAAUJ,EAAOK,UACvB,MAAEC,EAAK,OAAEC,GAAWJ,EAAIK,OAAOC,wBAGrCN,EAAIO,UAAU,KAAKC,SAGnB,MAAMC,EAAgB,GAAhBA,EAAiD,GACjDC,EAAaP,EAAQM,EADM,GAE3BE,EAAcP,EAASK,EAFgB,GAKvCG,EAAIZ,EACPa,OAAO,KACPC,KAAK,YAAY,aAADC,OAAeN,EAAW,KAAAM,OAAIN,EAAU,MAGrDO,EAAIf,EAAAA,MACPgB,OAAO,CAAC,EAAGrB,EAAKsB,SAChBC,MAAM,CAAC,EAAGT,IAGPU,EAAInB,EAAAA,MACPgB,OAAO,CAAC,EAAGhB,EAAAA,IAAOL,KAClByB,OACAF,MAAM,CAACR,EAAa,IAGvBC,EAAEC,OAAO,KACNC,KAAK,YAAY,eAADC,OAAiBJ,EAAW,MAC5CW,KAAKrB,EAAAA,IAAce,IAGtBJ,EAAEC,OAAO,KACNS,KAAKrB,EAAAA,IAAYmB,IAGpBR,EAAEC,OAAO,QACNU,MAAM3B,GACNkB,KAAK,OAAQ,QACbA,KAAK,SAAU,aACfA,KAAK,eAAgB,KACrBA,KAAK,IAAKb,EAAAA,MACRe,GAAE,CAACQ,EAAGC,IAAMT,EAAES,KACdL,GAAEI,GAAKJ,EAAEI,KACX,GAEF,CAAC5B,KAGF8B,EAAAA,EAAAA,KAAA,OACEC,IAAK9B,EACL+B,MAAO,CACLzB,MAAO,OACPC,OAAQ,UAEV,E,sBCvDN,MAoCC,EApCiByB,KAEhB,MAAOC,EAAUC,IAAcC,EAAAA,EAAAA,UAAS,IAsBxC,OANAjC,EAAAA,EAAAA,YAAU,KAbckC,WACtB,MAAM,KAACrC,SAAcsC,EAAAA,EAAMC,IAAI,8BAC/B,IACO,OAAJvC,QAAI,IAAJA,GAAAA,EAAMwC,UACJC,EAAAA,GAAMD,QAAQ,0BACfL,GAAiB,OAAJnC,QAAI,IAAJA,OAAI,EAAJA,EAAM0C,MAAO,IAC1BC,QAAQC,IAAIV,GAEpB,CAAC,MAAMW,GACHJ,EAAAA,GAAMI,MAAM,4BAEhB,GAGGC,EAAkB,GACjB,KAKAC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACAnB,EAAAA,EAAAA,KAAA,MAAAmB,SAAI,0BACDf,EAAUZ,OAAS,GAClBQ,EAAAA,EAAAA,KAACoB,EAAO,CAAClD,KAAMkC,KAEfJ,EAAAA,EAAAA,KAAA,KAAAmB,SAAG,iBAEJ,C","sources":["D3Element/D3Graph.js","PagesElement/Intensity.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst D3Graph = ({ data }) => {\r\n  const svgRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const svg = d3.select(svgRef.current);\r\n    const { width, height } = svg.node().getBoundingClientRect();\r\n\r\n    // Clear the SVG\r\n    svg.selectAll('*').remove();\r\n\r\n    // Set the dimensions and margins of the graph\r\n    const margin = { top: 20, right: 30, bottom: 30, left: 40 };\r\n    const innerWidth = width - margin.left - margin.right;\r\n    const innerHeight = height - margin.top - margin.bottom;\r\n\r\n    // Append the svg object to the body of the page\r\n    const g = svg\r\n      .append('g')\r\n      .attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\n    // X scale\r\n    const x = d3.scaleLinear()\r\n      .domain([0, data.length])\r\n      .range([0, innerWidth]);\r\n\r\n    // Y scale\r\n    const y = d3.scaleLinear()\r\n      .domain([0, d3.max(data)])\r\n      .nice()\r\n      .range([innerHeight, 0]);\r\n\r\n    // Add X axis\r\n    g.append('g')\r\n      .attr('transform', `translate(0,${innerHeight})`)\r\n      .call(d3.axisBottom(x));\r\n\r\n    // Add Y axis\r\n    g.append('g')\r\n      .call(d3.axisLeft(y));\r\n\r\n    // Add the line\r\n    g.append('path')\r\n      .datum(data)\r\n      .attr('fill', 'none')\r\n      .attr('stroke', 'steelblue')\r\n      .attr('stroke-width', 1.5)\r\n      .attr('d', d3.line()\r\n        .x((d, i) => x(i))\r\n        .y(d => y(d))\r\n      );\r\n\r\n  }, [data]);\r\n\r\n  return (\r\n    <svg\r\n      ref={svgRef}\r\n      style={{\r\n        width: '100%',\r\n        height: '500px',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default D3Graph;\r\n","import React, { useEffect, useState } from 'react'\r\nimport D3Graph from \"../D3Element/D3Graph\"\r\nimport axios from \"axios\"\r\nimport toast from 'react-hot-toast'\r\n\r\n\r\n// import D3Graph from \"../D3Element/D3Graph\"\r\n\r\nconst Intensity = () => {\r\n\r\n  const [intensity,SetIntensity]=useState([])\r\n  \r\n  //get the intensity\r\n  const GetIntensityData =async()=>{\r\n    const {data} = await axios.get(\"/api/v1/data/get-intensity\")\r\n    try{\r\n    if(data?.success){\r\n         toast.success(\"Your all Data is given\") \r\n        SetIntensity(data?.abc || [])\r\n        console.log(intensity)\r\n    }\r\n}catch(error){\r\n    toast.error(\"Error in getting the Data\")\r\n\r\n}\r\n}\r\n  useEffect(()=>{\r\n   GetIntensityData() \r\n  },[])\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <h1>Intensity Occurrences</h1>\r\n      {intensity.length > 0 ? (\r\n        <D3Graph data={intensity} />\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\n export default Intensity\r\n"],"names":["_ref","data","svgRef","useRef","useEffect","svg","d3","current","width","height","node","getBoundingClientRect","selectAll","remove","margin","innerWidth","innerHeight","g","append","attr","concat","x","domain","length","range","y","nice","call","datum","d","i","_jsx","ref","style","Intensity","intensity","SetIntensity","useState","async","axios","get","success","toast","abc","console","log","error","GetIntensityData","_jsxs","_Fragment","children","D3Graph"],"sourceRoot":""}