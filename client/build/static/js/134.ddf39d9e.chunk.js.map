{"version":3,"file":"static/js/134.ddf39d9e.chunk.js","mappings":"4KAMA,MAyDA,EAzDsBA,KAEpB,MAAOC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,KAC5CC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,IA4BnD,OA1BAG,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAAMC,QAAqBC,EAAAA,EAAMC,IAAI,4BAE/BC,EADYH,EAAaI,KAAKC,QAAQC,OAAOC,SACjBC,QAAO,CAACC,EAAKJ,KAC7CI,EAAIJ,IAAYI,EAAIJ,IAAY,GAAK,EAC9BI,IACN,CAAC,GAEEC,EAASC,OAAOC,KAAKT,GACrBU,EAASF,OAAOG,OAAOX,GAE7BT,EAAiBgB,GACjBb,EAAiBgB,GAEjBE,EAAAA,GAAMC,QAAQ,4BAChB,CAAE,MAAOC,GACPF,EAAAA,GAAME,MAAM,uBACZC,QAAQD,MAAMA,EAChB,GAGFE,EAAW,GACV,KAGDC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EAEEF,EAAAA,EAAAA,KAACI,EAAAA,GAAO,KACRD,EAAAA,EAAAA,MAAA,QAAME,UAAU,kBAAiBH,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,0BACJC,EAAAA,EAAAA,MAAA,WAAAD,SAAA,EACEF,EAAAA,EAAAA,KAACM,EAAAA,EAAQ,CACPC,OAAQ/B,EACRgC,OAAQ,GACRC,QAAQ,gBACRC,QAAQ,GACRC,UAAU,0BACVC,UAAU,GACVtB,OAAQjB,EACRwC,YAAY,KAEdb,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kCAIT,C,qEC/CPY,EAAAA,GAAQC,SACNC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,IAGF,MAAMC,EAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,QAElEhB,EAAWiB,IASV,IATW,OAChBhB,EAAS,GAAE,OACXC,EAAS,GAAE,QACXC,EAAO,QACPC,EAAO,UACPC,EAAS,UACTC,EAAS,WACTC,GAAa,EAAK,OAClBvB,EAASgC,GACVC,EACC,MAAMC,EAAU,CACdC,YAAY,EACZC,UAAWb,EAAa,IAAM,IAC9Bc,QAAS,CACPC,OAAQ,CACNC,SAAS,GAEXC,MAAO,CACLD,SAAS,IAGbE,OAAQ,CACNC,EAAG,CACDC,aAAa,EACbC,KAAM,CACJL,SAAS,IAGbM,EAAG,CACDD,KAAM,CACJL,SAAS,MAMX7C,EAAO,CACXM,SACA8C,SAAU,CACR,CACEC,MAAO5B,EACPzB,KAAMuB,EACN+B,gBAAiB3B,EACjB4B,aAAc,OACdC,cAAe,EACfC,mBAAoB,MAK1B,OAAOzC,EAAAA,EAAAA,KAAC0C,EAAAA,GAAG,CAAClB,QAASA,EAASxC,KAAMA,GAAQ,C","sources":["PagesElement/CountryCharts.js","ReactCharts/Barcharts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { BarChart } from '../ReactCharts/Barcharts'; // Adjust the import path as needed\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\n\r\nconst CountryCharts = () => {\r\n\r\n  const [countryLabels, setCountryLabels] = useState([]);\r\n  const [countryCounts, setCountryCounts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const userResponse = await axios.get('/api/v1/data/get-country');\r\n        const countries = userResponse.data.country.filter(Boolean); // Filter out empty strings\r\n        const countryCountMap = countries.reduce((acc, country) => {\r\n          acc[country] = (acc[country] || 0) + 1;\r\n          return acc;\r\n        }, {});\r\n\r\n        const labels = Object.keys(countryCountMap);\r\n        const counts = Object.values(countryCountMap);\r\n\r\n        setCountryLabels(labels);\r\n        setCountryCounts(counts);\r\n\r\n        toast.success(\"Data fetched successfully\");\r\n      } catch (error) {\r\n        toast.error('Error fetching data');\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n      \r\n        <Toaster />\r\n        <main className=\"chart-container\">\r\n          <h1>Country Distribution</h1>\r\n          <section>\r\n            <BarChart\r\n              data_1={countryCounts}\r\n              data_2={[]} // No second dataset needed\r\n              title_1=\"Country Count\"\r\n              title_2=\"\"\r\n              bgColor_1=\"rgba(53, 162, 255, 0.5)\"\r\n              bgColor_2=\"\"\r\n              labels={countryLabels}\r\n              horizontal={true} // Adjust as necessary\r\n            />\r\n            <h2>Country Occurrences</h2>\r\n          </section>\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CountryCharts;\r\n","import React from 'react';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"];\r\n\r\nconst BarChart = ({\r\n  data_1 = [],\r\n  data_2 = [],\r\n  title_1,\r\n  title_2,\r\n  bgColor_1,\r\n  bgColor_2,\r\n  horizontal = false,\r\n  labels = months,\r\n}) => {\r\n  const options = {\r\n    responsive: true,\r\n    indexAxis: horizontal ? \"y\" : \"x\",\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n      title: {\r\n        display: false,\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        grid: {\r\n          display: false,\r\n        },\r\n      },\r\n      x: {\r\n        grid: {\r\n          display: false,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: title_1,\r\n        data: data_1,\r\n        backgroundColor: bgColor_1,\r\n        barThickness: \"flex\",\r\n        barPercentage: 1,\r\n        categoryPercentage: 0.4,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return <Bar options={options} data={data} />;\r\n};\r\n\r\nexport { BarChart };\r\n"],"names":["CountryCharts","countryLabels","setCountryLabels","useState","countryCounts","setCountryCounts","useEffect","async","userResponse","axios","get","countryCountMap","data","country","filter","Boolean","reduce","acc","labels","Object","keys","counts","values","toast","success","error","console","fetchData","_jsx","_Fragment","children","_jsxs","Toaster","className","BarChart","data_1","data_2","title_1","title_2","bgColor_1","bgColor_2","horizontal","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","months","_ref","options","responsive","indexAxis","plugins","legend","display","title","scales","y","beginAtZero","grid","x","datasets","label","backgroundColor","barThickness","barPercentage","categoryPercentage","Bar"],"sourceRoot":""}