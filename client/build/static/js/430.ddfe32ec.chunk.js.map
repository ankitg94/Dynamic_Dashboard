{"version":3,"file":"static/js/430.ddfe32ec.chunk.js","mappings":"oLAuFA,MA8EA,EA9EqBA,KACnB,MAAOC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,KAC5CC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,KAC5CG,EAAYC,IAAiBJ,EAAAA,EAAAA,UAAS,KAE7CK,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAAMC,QAAqBC,EAAAA,EAAMC,IAAI,2BAE/BC,EADYH,EAAaI,KAAKC,OAAOC,OAAOC,SAChBC,QAAO,CAACC,EAAKC,KAC7CD,EAAIC,IAAYD,EAAIC,IAAY,GAAK,EAC9BD,IACN,CAAC,GAEEE,EAASC,OAAOC,KAAKV,GACrBW,EAASF,OAAOG,OAAOZ,GAE7BX,EAAiBmB,GACjBhB,EAAiBmB,GAEjBE,EAAAA,GAAMC,QAAQ,4BAChB,CAAE,MAAOC,GACPF,EAAAA,GAAME,MAAM,uBACZC,QAAQD,MAAMA,EAChB,GAGFE,EAAW,GACV,IAEH,MAIMC,EAAiB9B,EAAce,QAAQgB,GAC3CA,EAAMC,cAAcC,SAAS5B,EAAW2B,iBAEpCE,EAAiBJ,EAAeK,KACnCJ,GAAU5B,EAAcH,EAAcoC,QAAQL,MAG3CM,EAAY,CAChBjB,OAAQU,EACRQ,SAAU,CACR,CACEP,MAAO,gBACPlB,KAAMqB,EACNK,gBAAiB,0BACjBC,YAAa,KAKnB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BC,SAAA,EACvCC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KACPD,EAAAA,EAAAA,KAACE,EAAAA,GAAO,KACRL,EAAAA,EAAAA,MAAA,QAAMC,UAAU,8BAA6BC,SAAA,EAC3CC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,0BAAyBC,SAAC,yBACxCF,EAAAA,EAAAA,MAAA,WAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,SACEG,KAAK,OACLC,YAAY,oBACZC,MAAO5C,EACP6C,SAlCkBC,IAC1B7C,EAAc6C,EAAMC,OAAOH,MAAM,EAkCzBP,UAAU,6FAEZE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,SAAQC,UACrBC,EAAAA,EAAAA,KAACS,EAAAA,GAAG,CAACxC,KAAMwB,cAKb,C,6DC/JV,MAgBA,EAhBeQ,KAEXD,EAAAA,EAAAA,KAAAU,EAAAA,SAAA,CAAAX,UACEF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oDAAmDC,SAAA,EAClEC,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAACC,GAAG,IAAId,UAAU,sBAAqBC,SAAC,2BAE7CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAACC,GAAG,IAAId,UAAU,qBAAoBC,SAAC,UAC5CC,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAACC,GAAG,aAAcd,UAAU,qBAAoBC,SAAC,qB","sources":["PagesFilter/SourceFilter.js","components/Navbar.js"],"sourcesContent":["\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { BarChart } from '../ReactCharts/Barcharts'; // Adjust the import path as needed\r\n// import toast, { Toaster } from 'react-hot-toast';\r\n// import Navbar from '../components/Navbar';\r\n\r\n// const SourceFilter = () => {\r\n//   const [countryLabels, setCountryLabels] = useState([]);\r\n//   const [countryCounts, setCountryCounts] = useState([]);\r\n//   const [filterText, setFilterText] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const userResponse = await axios.get('/api/v1/data/get-source');\r\n//         const countries = userResponse.data.source.filter(Boolean); // Filter out empty strings\r\n//         const countryCountMap = countries.reduce((acc, country) => {\r\n//           acc[country] = (acc[country] || 0) + 1;\r\n//           return acc;\r\n//         }, {});\r\n\r\n//         const labels = Object.keys(countryCountMap);\r\n//         const counts = Object.values(countryCountMap);\r\n\r\n//         setCountryLabels(labels);\r\n//         setCountryCounts(counts);\r\n\r\n//         toast.success(\"Data fetched successfully\");\r\n//       } catch (error) {\r\n//         toast.error('Error fetching data');\r\n//         console.error(error);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const handleFilterChange = (event) => {\r\n//     setFilterText(event.target.value);\r\n//   };\r\n\r\n//   const filteredLabels = countryLabels.filter((label) =>\r\n//     label.toLowerCase().includes(filterText.toLowerCase())\r\n//   );\r\n//   const filteredCounts = filteredLabels.map((label) => countryCounts[countryLabels.indexOf(label)]);\r\n\r\n//   return (\r\n//     <>\r\n//       <div>\r\n//         <Navbar/>\r\n//         <Toaster />\r\n//         <main className=\"chart-container\">\r\n//           <h1>Source Distribution</h1>\r\n//           <section>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Filter sources...\"\r\n//               value={filterText}\r\n//               onChange={handleFilterChange}\r\n//             />\r\n//             <BarChart\r\n//               data_1={filteredCounts}\r\n//               data_2={[]} // No second dataset needed\r\n//               title_1=\"Country Count\"\r\n//               title_2=\"\"\r\n//               bgColor_1=\"rgba(53, 162, 255, 0.5)\"\r\n//               bgColor_2=\"\"\r\n//               labels={filteredLabels}\r\n//               horizontal={true} // Adjust as necessary\r\n//             />\r\n//             <h2>Country Occurrences</h2>\r\n//           </section>\r\n//         </main>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default SourceFilter;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport Navbar from '../components/Navbar';\r\n\r\nconst SourceFilter = () => {\r\n  const [countryLabels, setCountryLabels] = useState([]);\r\n  const [countryCounts, setCountryCounts] = useState([]);\r\n  const [filterText, setFilterText] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const userResponse = await axios.get('/api/v1/data/get-source');\r\n        const countries = userResponse.data.source.filter(Boolean); // Filter out empty strings\r\n        const countryCountMap = countries.reduce((acc, country) => {\r\n          acc[country] = (acc[country] || 0) + 1;\r\n          return acc;\r\n        }, {});\r\n\r\n        const labels = Object.keys(countryCountMap);\r\n        const counts = Object.values(countryCountMap);\r\n\r\n        setCountryLabels(labels);\r\n        setCountryCounts(counts);\r\n\r\n        toast.success('Data fetched successfully');\r\n      } catch (error) {\r\n        toast.error('Error fetching data');\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleFilterChange = (event) => {\r\n    setFilterText(event.target.value);\r\n  };\r\n\r\n  const filteredLabels = countryLabels.filter((label) =>\r\n    label.toLowerCase().includes(filterText.toLowerCase())\r\n  );\r\n  const filteredCounts = filteredLabels.map(\r\n    (label) => countryCounts[countryLabels.indexOf(label)]\r\n  );\r\n\r\n  const chartData = {\r\n    labels: filteredLabels,\r\n    datasets: [\r\n      {\r\n        label: 'Country Count',\r\n        data: filteredCounts,\r\n        backgroundColor: 'rgba(53, 162, 255, 0.5)',\r\n        borderWidth: 2,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100\">\r\n      <Navbar />\r\n      <Toaster />\r\n      <main className=\"container mx-auto px-4 py-8\">\r\n        <h1 className=\"text-3xl font-bold mb-4\">Source Distribution</h1>\r\n        <section>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Filter sources...\"\r\n            value={filterText}\r\n            onChange={handleFilterChange}\r\n            className=\"w-full p-2 mb-4 rounded border border-gray-300 focus:outline-none focus:border-blue-500\"\r\n          />\r\n          <div className=\"w-full\">\r\n            <Bar data={chartData} />\r\n          </div>\r\n          \r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SourceFilter;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nconst Navbar = () => {\r\n  return (\r\n    <>\r\n      <nav className=\"flex justify-between items-center bg-gray-600 p-4\">\r\n      <Link to=\"/\" className=\"text-white text-2xl\">BlackCoffer Assigment\r\n      </Link>\r\n      <div className=\"flex gap-4\">\r\n        <Link to=\"/\" className=\"text-white text-lg\">Home</Link>\r\n        <Link to=\"/dashboard\"  className=\"text-white text-lg\">Dashboard</Link>\r\n      </div>\r\n    </nav>\r\n \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n"],"names":["SourceFilter","countryLabels","setCountryLabels","useState","countryCounts","setCountryCounts","filterText","setFilterText","useEffect","async","userResponse","axios","get","countryCountMap","data","source","filter","Boolean","reduce","acc","country","labels","Object","keys","counts","values","toast","success","error","console","fetchData","filteredLabels","label","toLowerCase","includes","filteredCounts","map","indexOf","chartData","datasets","backgroundColor","borderWidth","_jsxs","className","children","_jsx","Navbar","Toaster","type","placeholder","value","onChange","event","target","Bar","_Fragment","Link","to"],"sourceRoot":""}